'use client';

import { useState, useEffect } from 'react';

export default function TestimonialsSection() {
  const [isVisible, setIsVisible] = useState(false);
  const [activeTestimonial, setActiveTestimonial] = useState(0);

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      { threshold: 0.1 }
    );

    const section = document.getElementById('testimonials-section');
    if (section) observer.observe(section);

    return () => observer.disconnect();
  }, []);

  useEffect(() => {
    const interval = setInterval(() => {
      setActiveTestimonial((prev) => (prev + 1) % testimonials.length);
    }, 5000);

    return () => clearInterval(interval);
  }, []);

  const testimonials = [
    {
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
      location: '–ú–æ—Å–∫–≤–∞',
      text: '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ! –ó–∞ 45 –¥–Ω–µ–π –ø–æ–ª—É—á–∏–ª–∏ –≥–æ—Ç–æ–≤—ã–π –¥–æ–º. –í—Å–µ —Ä–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ, –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ—Ç–ª–∏—á–Ω—ã–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!',
      rating: 5,
      avatar: 'üë®‚Äçüíº'
    },
    {
      name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
      location: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
      text: '–î–æ–ª–≥–æ –≤—ã–±–∏—Ä–∞–ª–∏ –ø–æ–¥—Ä—è–¥—á–∏–∫–∞, –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –Ω–∞ —ç—Ç–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –Ω–µ –ø–æ–∂–∞–ª–µ–ª–∏. –î–æ–º —Ç–µ–ø–ª—ã–π, —É—é—Ç–Ω—ã–π, –≤—Å–µ —Å–¥–µ–ª–∞–Ω–æ —Å –¥—É—à–æ–π. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º!',
      rating: 5,
      avatar: 'üë©‚Äçüíº'
    },
    {
      name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
      location: '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä',
      text: '–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞. –î–æ–º –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ —Ç–æ—á–Ω–æ –≤ —Å—Ä–æ–∫, –Ω–∏–∫–∞–∫–∏—Ö –¥–æ–ø–ª–∞—Ç –Ω–µ –±—ã–ª–æ. –ñ–∏–≤–µ–º —É–∂–µ –ø–æ–ª–≥–æ–¥–∞ - –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
      rating: 5,
      avatar: 'üë®‚Äçüîß'
    }
  ];

  const stats = [
    { number: '1000+', label: '–ü–æ—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –¥–æ–º–æ–≤', icon: 'üè†' },
    { number: '98%', label: '–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤', icon: 'üòä' },
    { number: '30-60', label: '–î–Ω–µ–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞', icon: '‚ö°' },
    { number: '10 –ª–µ—Ç', label: '–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞', icon: 'üõ°Ô∏è' }
  ];

  return (
    <section 
      id="testimonials-section"
      style={{
        padding: '8rem 2rem',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)',
        backgroundSize: '400% 400%',
        animation: 'gradientShift 15s ease infinite',
        position: 'relative',
        overflow: 'hidden'
      }}
    >
      {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div style={{
        position: 'absolute',
        top: '10%',
        left: '5%',
        width: '200px',
        height: '200px',
        background: 'rgba(255, 255, 255, 0.1)',
        borderRadius: '50%',
        filter: 'blur(40px)',
        animation: 'float 8s ease-in-out infinite'
      }} />
      
      <div style={{
        position: 'absolute',
        bottom: '15%',
        right: '10%',
        width: '150px',
        height: '150px',
        background: 'rgba(255, 255, 255, 0.08)',
        borderRadius: '30%',
        filter: 'blur(30px)',
        animation: 'float 6s ease-in-out infinite reverse'
      }} />

      <div style={{
        maxWidth: '1400px',
        margin: '0 auto',
        position: 'relative',
        zIndex: 2
      }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div style={{
          textAlign: 'center',
          marginBottom: '4rem',
          transform: isVisible ? 'translateY(0)' : 'translateY(30px)',
          opacity: isVisible ? 1 : 0,
          transition: 'all 0.8s cubic-bezier(0.4, 0, 0.2, 1)'
        }}>
          <div style={{
            display: 'inline-flex',
            alignItems: 'center',
            gap: '0.5rem',
            background: 'rgba(255, 255, 255, 0.2)',
            backdropFilter: 'blur(20px)',
            border: '1px solid rgba(255, 255, 255, 0.3)',
            padding: '0.75rem 1.5rem',
            borderRadius: '50px',
            fontSize: '0.9rem',
            fontWeight: '600',
            marginBottom: '2rem',
            color: 'white',
            textTransform: 'uppercase',
            letterSpacing: '1px'
          }}>
            <div style={{
              width: '8px',
              height: '8px',
              background: 'white',
              borderRadius: '50%',
              animation: 'pulse 2s ease-in-out infinite'
            }} />
            –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
          </div>
          
          <h2 style={{
            fontSize: 'clamp(2.5rem, 5vw, 4rem)',
            fontWeight: '800',
            color: 'white',
            lineHeight: '1.2',
            marginBottom: '1.5rem'
          }}>
            –ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã
          </h2>
          
          <p style={{
            fontSize: '1.3rem',
            color: 'rgba(255, 255, 255, 0.9)',
            maxWidth: '700px',
            margin: '0 auto',
            lineHeight: '1.6'
          }}>
            –ë–æ–ª–µ–µ 1000 —Å–µ–º–µ–π —É–∂–µ –∂–∏–≤—É—Ç –≤ –Ω–∞—à–∏—Ö –¥–æ–º–∞—Ö –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç –Ω–∞—Å —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º
          </p>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
          gap: '2rem',
          marginBottom: '5rem'
        }}>
          {stats.map((stat, index) => (
            <div
              key={index}
              style={{
                background: 'rgba(255, 255, 255, 0.15)',
                backdropFilter: 'blur(20px)',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                borderRadius: '20px',
                padding: '2rem',
                textAlign: 'center',
                transform: isVisible ? 'translateY(0)' : 'translateY(50px)',
                opacity: isVisible ? 1 : 0,
                transition: 'all 0.8s cubic-bezier(0.4, 0, 0.2, 1)',
                transitionDelay: `${index * 0.1}s`,
                cursor: 'pointer'
              }}
              onMouseEnter={(e) => {
                e.target.style.transform = 'translateY(-10px) scale(1.05)';
                e.target.style.background = 'rgba(255, 255, 255, 0.25)';
              }}
              onMouseLeave={(e) => {
                e.target.style.transform = 'translateY(0) scale(1)';
                e.target.style.background = 'rgba(255, 255, 255, 0.15)';
              }}
            >
              <div style={{ fontSize: '2.5rem', marginBottom: '1rem' }}>{stat.icon}</div>
              <div style={{
                fontSize: '2.5rem',
                fontWeight: '800',
                marginBottom: '0.5rem',
                color: 'white'
              }}>
                {stat.number}
              </div>
              <div style={{
                fontSize: '1rem',
                color: 'rgba(255, 255, 255, 0.9)',
                fontWeight: '500'
              }}>
                {stat.label}
              </div>
            </div>
          ))}
        </div>

        {/* –û—Ç–∑—ã–≤—ã */}
        <div style={{
          background: 'rgba(255, 255, 255, 0.1)',
          backdropFilter: 'blur(20px)',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          borderRadius: '30px',
          padding: '3rem',
          position: 'relative',
          overflow: 'hidden',
          transform: isVisible ? 'translateY(0)' : 'translateY(50px)',
          opacity: isVisible ? 1 : 0,
          transition: 'all 0.8s cubic-bezier(0.4, 0, 0.2, 1) 0.4s'
        }}>
          <div style={{
            position: 'absolute',
            top: '50%',
            left: '50%',
            transform: 'translate(-50%, -50%)',
            width: '400px',
            height: '400px',
            background: 'rgba(255, 255, 255, 0.05)',
            borderRadius: '50%',
            filter: 'blur(60px)'
          }} />
          
          <div style={{ position: 'relative', zIndex: 2 }}>
            {/* –¢–µ–∫—É—â–∏–π –æ—Ç–∑—ã–≤ */}
            <div style={{
              textAlign: 'center',
              marginBottom: '2rem'
            }}>
              <div style={{
                fontSize: '4rem',
                marginBottom: '1rem'
              }}>
                {testimonials[activeTestimonial].avatar}
              </div>
              
              <div style={{
                display: 'flex',
                justifyContent: 'center',
                marginBottom: '1.5rem'
              }}>
                {[...Array(testimonials[activeTestimonial].rating)].map((_, i) => (
                  <span key={i} style={{ fontSize: '1.5rem', color: '#ffd700' }}>‚≠ê</span>
                ))}
              </div>
              
              <blockquote style={{
                fontSize: '1.3rem',
                fontStyle: 'italic',
                color: 'white',
                lineHeight: '1.6',
                marginBottom: '2rem',
                maxWidth: '800px',
                margin: '0 auto 2rem'
              }}>
                "{testimonials[activeTestimonial].text}"
              </blockquote>
              
              <div>
                <div style={{
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  color: 'white',
                  marginBottom: '0.5rem'
                }}>
                  {testimonials[activeTestimonial].name}
                </div>
                <div style={{
                  fontSize: '1rem',
                  color: 'rgba(255, 255, 255, 0.8)'
                }}>
                  {testimonials[activeTestimonial].location}
                </div>
              </div>
            </div>
            
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
            <div style={{
              display: 'flex',
              justifyContent: 'center',
              gap: '1rem'
            }}>
              {testimonials.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setActiveTestimonial(index)}
                  style={{
                    width: '12px',
                    height: '12px',
                    borderRadius: '50%',
                    border: 'none',
                    background: index === activeTestimonial 
                      ? 'white' 
                      : 'rgba(255, 255, 255, 0.4)',
                    cursor: 'pointer',
                    transition: 'all 0.3s ease'
                  }}
                />
              ))}
            </div>
          </div>
        </div>
      </div>

      <style jsx>{`
        @keyframes gradientShift {
          0% { background-position: 0% 50%; }
          50% { background-position: 100% 50%; }
          100% { background-position: 0% 50%; }
        }
        
        @keyframes float {
          0%, 100% { transform: translateY(0px) rotate(0deg); }
          33% { transform: translateY(-20px) rotate(2deg); }
          66% { transform: translateY(-10px) rotate(-1deg); }
        }
        
        @keyframes pulse {
          0%, 100% { opacity: 0.8; transform: scale(1); }
          50% { opacity: 1; transform: scale(1.05); }
        }
        
        @media (max-width: 768px) {
          section {
            padding: 4rem 1rem !important;
          }
          
          section > div > div:nth-child(2) {
            grid-template-columns: repeat(2, 1fr) !important;
            gap: 1rem !important;
          }
          
          section > div > div:nth-child(2) > div {
            padding: 1.5rem !important;
          }
          
          section > div > div:nth-child(3) {
            padding: 2rem !important;
          }
          
          section > div > div:nth-child(3) blockquote {
            font-size: 1.1rem !important;
          }
        }
        
        @media (max-width: 480px) {
          section > div > div:nth-child(1) h2 {
            font-size: 2rem !important;
          }
          
          section > div > div:nth-child(2) {
            grid-template-columns: 1fr !important;
          }
          
          section > div > div:nth-child(3) {
            padding: 1.5rem !important;
          }
        }
      `}</style>
    </section>
  );
}