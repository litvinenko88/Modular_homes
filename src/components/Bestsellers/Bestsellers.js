import { useState, useEffect, useRef } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import styles from "./Bestsellers.module.css";
import { getBestsellersSchema } from "./bestsellers-schema";
import { safeLog } from "../../utils/security";

const housesData = [
  {
    id: 1,
    name: "–ù–æ–≤—ã–π –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫",
    area: "15-20 –º¬≤",
    feature: "–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å –æ–¥–Ω–æ–≥–æ –º–æ–¥—É–ª—è",
    price: "–æ—Ç 855 000 —Ä—É–±",
    description:
      "–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å–Ω—ã–π –¥–æ–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –º–æ–¥—É–ª—å–Ω—ã—Ö –¥–æ–º–æ–≤. –í—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–∞ —É–∂–µ –≤–Ω—É—Ç—Ä–∏, –≤–∫–ª—é—á–∞—è —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.",
    image: "/img/New_Arkhangelsk/1.jpg",
    imageWebp: "/img/New_Arkhangelsk/1.jpg",
    slug: "novyj-arkhangelsk",
  },
  {
    id: 2,
    name: "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫ —Å —Ç–µ—Ä—Ä–∞—Å–æ–π",
    area: "15 –º¬≤ + —Ç–µ—Ä—Ä–∞—Å–∞",
    feature: "–ú–æ–¥—É–ª—å–Ω—ã–π –¥–æ–º —Å –æ—Ç–∫—Ä—ã—Ç–æ–π —Ç–µ—Ä—Ä–∞—Å–æ–π",
    price: "–æ—Ç 1 075 000 —Ä—É–±",
    description:
      "–£—é—Ç–Ω—ã–π –¥–æ–º —Å –≥–æ—Ç–æ–≤–æ–π —Ç–µ—Ä—Ä–∞—Å–æ–π –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ. –ò–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫–æ—Ñ–µ.",
    image: "/img/Arkhangelsk_terrace/1.jpg",
    imageWebp: "/img/Arkhangelsk_terrace/1.jpg",
    slug: "arkhangelsk-s-terrasoj",
  },
  {
    id: 3,
    name: "–£–≥–ª–æ–≤–æ–π –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫",
    area: "30 –º¬≤ (6x5)",
    feature:
      "–£–≥–ª–æ–≤–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∞—è –¥–ª—è –Ω–µ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤",
    price: "–æ—Ç 1 265 000 —Ä—É–±",
    description:
      "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ –∏ –±–æ–ª—å—à–µ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –≤ –º–æ–¥–µ–ª–∏ –¥–æ–º–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Å–µ–º—å–∏. –ú–∞–∫—Å–∏–º—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–∞ –≤–∞—à–µ–º —É—á–∞—Å—Ç–∫–µ —Å –Ω–∞—à–∏–º–∏ –¥–æ–º–∞–º–∏ –∏ –±–∞–Ω—è–º–∏ –ø–æ–¥ –∫–ª—é—á.",
    image: "/img/Angular_Arkhangelsk/1.jpg",
    imageWebp: "/img/Angular_Arkhangelsk/1.jpg",
    slug: "uglovoj-arkhangelsk",
  },
  {
    id: 4,
    name: "–ë–∞—Ä–Ω-—Ö–∞—É—Å",
    area: "35-40 –º¬≤",
    feature: "–°—Ç–∏–ª—å Barnhouse",
    price: "–æ—Ç 930 000 —Ä—É–±",
    description:
      "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–∏–ø–æ–≤–æ–π –∫–∞—Ä–∫–∞—Å–Ω—ã–π –¥–æ–º –≤ —Å—Ç–∏–ª–µ –±–∞—Ä–Ω—Ö–∞—É—Å —Å –≤—ã—Å–æ–∫–∏–º–∏ –ø–æ—Ç–æ–ª–∫–∞–º–∏. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ü–µ–Ω–∏—Ç —Å—Ç–∏–ª—å, –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç.",
    image: "/img/Barnhouse/1.jpg",
    imageWebp: "/img/Barnhouse/1.jpg",
    slug: "barnkhaus",
  },
  {
    id: 5,
    name: "–î–≤—É—Ö–º–æ–¥—É–ª—å–Ω–∞—è –î–≤–∏–Ω–µ—è",
    area: "30-40 –º¬≤",
    feature: "–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–∏–Ω—Ç–æ–≤—ã—Ö —Å–≤–∞–π",
    price: "–æ—Ç 1 430 000 —Ä—É–±",
    description:
      "–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ —Å —á—ë—Ç–∫–∏–º –∑–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∞—è –¥–ª—è –∑–∞–≥–æ—Ä–æ–¥–Ω–æ–≥–æ –¥–æ–º–∞ –¥–ª—è –∫—Ä—É–≥–ª–æ–≥–æ–¥–∏—á–Ω–æ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è, –¥–∞–∂–µ –≤ —Å–ª–æ–∂–Ω—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö. –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∏ –≤–Ω–µ—à–Ω—è—è –æ—Ç–¥–µ–ª–∫–∞ –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ —Å–æ—á–µ—Ç–∞—é—Ç—Å—è. –ö–æ–º—Ñ–æ—Ä—Ç –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏ –≤ –æ–¥–Ω–æ–º –º–æ–¥—É–ª—å–Ω–æ–º —Ä–µ—à–µ–Ω–∏–∏.",
    image: "/img/Two_module_Lane/1.jpg",
    imageWebp: "/img/Two_module_Lane/1.jpg",
    slug: "dvukhmodulnaya-dvineya",
  },
  {
    id: 6,
    name: "–ß–µ—Ç—ã—Ä–µ—Ö–º–æ–¥—É–ª—å–Ω—ã–π –ë–∞—Ä–Ω",
    area: "70-80 –º¬≤",
    feature: "–ü—Ä–æ—Å—Ç–æ—Ä–Ω—ã–π –¥–æ–º –¥–ª—è –±–æ–ª—å—à–æ–π —Å–µ–º—å–∏",
    price: "–æ—Ç 3 130 000 —Ä—É–±",
    description:
      "–°–æ–ª–∏–¥–Ω—ã–π –¥–æ–º —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º. –ü—Ä–æ—Å—Ç–æ—Ä –¥–ª—è –∂–∏–∑–Ω–∏, —Ä–∞–±–æ—Ç—ã –∏ –ø—Ä–∏—ë–º–∞ –≥–æ—Å—Ç–µ–π –≤ –º–æ–¥—É–ª—å–Ω—ã—Ö –¥–æ–º–∞—Ö.",
    image: "/img/Four_Module_Barn/1.jpg",
    imageWebp: "/img/Four_Module_Barn/1.jpg",
    slug: "chetyrekhmodulnyj-barn",
  },
];

export default function Bestsellers() {
  const [visibleCards, setVisibleCards] = useState([]);
  const [isInView, setIsInView] = useState(false);
  const sectionRef = useRef(null);
  const router = useRouter();

  useEffect(() => {
    if (typeof window !== 'undefined' && sectionRef.current) {
      const observer = new IntersectionObserver(
        ([entry]) => {
          if (entry.isIntersecting) {
            setIsInView(true);
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
            housesData.forEach((_, index) => {
              setTimeout(() => {
                setVisibleCards((prev) => [...prev, index]);
              }, index * 150);
            });
          }
        },
        { threshold: 0.1 }
      );

      observer.observe(sectionRef.current);
      return () => observer.disconnect();
    }
  }, []);

  const handleCardClick = (slug) => {
    if (typeof window !== 'undefined' && slug) {
      safeLog(`Navigation to project: ${slug}`, 'info');
      router.push(`/catalog/${encodeURIComponent(slug)}`);
    }
  };

  return (
    <>
      <Head>
        <script
          type="application/ld+json"
          dangerouslySetInnerHTML={{
            __html: JSON.stringify(getBestsellersSchema()),
          }}
        />
      </Head>

      <section
        ref={sectionRef}
        className={`${styles.bestsellers} ${isInView ? styles.inView : ""}`}
        itemScope
        itemType="https://schema.org/ItemList"
        aria-labelledby="bestsellers-title">
        <div className="container">
          <header className={styles.header}>
            <h2 id="bestsellers-title" className={styles.title} itemProp="name">
              –ù–∞—à–∏ –±–µ—Å—Ç—Å–µ–ª–ª–µ—Ä—ã
            </h2>
            <p className={styles.subtitle}>
              –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥—É–ª—å–Ω—ã–µ –¥–æ–º–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã
            </p>
          </header>

          <div
            className={styles.grid}
            role="list"
            aria-label="–°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–¥—É–ª—å–Ω—ã—Ö –¥–æ–º–æ–≤">
            {housesData.map((house, index) => (
              <article
                key={house.id}
                className={`${styles.card} ${
                  visibleCards.includes(index) ? styles.visible : ""
                }`}
                itemScope
                itemType="https://schema.org/Product"
                role="listitem"
                tabIndex="0"
                onClick={() => handleCardClick(house.slug)}
                onKeyDown={(e) => {
                  if (e.key === "Enter" || e.key === " ") {
                    e.preventDefault();
                    handleCardClick(house.slug);
                  }
                }}
                aria-label={`–ú–æ–¥—É–ª—å–Ω—ã–π –¥–æ–º ${house.name}, –ø–ª–æ—â–∞–¥—å ${house.area}, —Ü–µ–Ω–∞ ${house.price}`}>
                <div className={styles.imageContainer}>
                  <picture>
                    <source srcSet={house.imageWebp} type="image/webp" />
                    <img
                      src={house.image}
                      alt={`–ú–æ–¥—É–ª—å–Ω—ã–π –¥–æ–º ${house.name} - ${house.feature}`}
                      className={styles.image}
                      loading="lazy"
                      itemProp="image"
                    />
                  </picture>
                  <div className={styles.imageOverlay} aria-hidden="true">
                    <span className={styles.viewMore}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</span>
                  </div>
                </div>

                <div className={styles.content}>
                  <header className={styles.cardHeader}>
                    <h3 className={styles.cardTitle} itemProp="name">
                      {house.name}
                    </h3>
                    <div
                      className={styles.area}
                      aria-label={`–ü–ª–æ—â–∞–¥—å –¥–æ–º–∞: ${house.area}`}>
                      <span className={styles.areaIcon} aria-hidden="true">
                        üìê
                      </span>
                      <span itemProp="floorSize">{house.area}</span>
                    </div>
                  </header>

                  <div className={styles.feature} itemProp="description">
                    <span className={styles.featureLabel}>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:</span>
                    <span className={styles.featureText}>{house.feature}</span>
                  </div>

                  <div
                    className={styles.price}
                    itemProp="offers"
                    itemScope
                    itemType="https://schema.org/Offer">
                    <meta itemProp="priceCurrency" content="RUB" />
                    <meta
                      itemProp="availability"
                      content="https://schema.org/InStock"
                    />
                    <span className={styles.priceLabel}>–¶–µ–Ω–∞:</span>
                    <span className={styles.priceValue} itemProp="price">
                      {house.price}
                    </span>
                  </div>

                  <p className={styles.description}>{house.description}</p>

                  <button
                    className={styles.button}
                    type="button"
                    aria-label={`–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ–µ–∫—Ç–µ –¥–æ–º–∞ ${house.name}`}
                    onClick={(e) => {
                      e.stopPropagation();
                      handleCardClick(house.slug);
                    }}>
                    <span>–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ–µ–∫—Ç–µ</span>
                    <span className={styles.buttonIcon} aria-hidden="true">
                      ‚Üí
                    </span>
                  </button>
                </div>
              </article>
            ))}
          </div>
          
          <div className={styles.catalogButtonContainer}>
            <button 
              className={styles.catalogButton} 
              type="button"
              onClick={() => router.push('/catalog')}
            >
              –°–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥
            </button>
          </div>
        </div>
      </section>
    </>
  );
}
