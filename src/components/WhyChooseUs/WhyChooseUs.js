import { useState, useEffect, useRef } from "react";
import styles from "./WhyChooseUs.module.css";

const WhyChooseUs = () => {
  const [visibleItems, setVisibleItems] = useState(new Set());
  const sectionRef = useRef(null);
  const itemsRef = useRef([]);

  const advantages = [
    {
      id: 1,
      title: "–°–∫–æ—Ä–æ—Å—Ç—å –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è",
      description:
        "–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ—Ç —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞ –¥–æ —Å–¥–∞—á–∏ –∫–ª—é—á–µ–π –∑–∞–Ω–∏–º–∞–µ—Ç 30 –¥–Ω–µ–π. –ú–æ–Ω—Ç–∞–∂ –∫–æ—Ä–æ–±–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–∫–µ –∑–∞–∫–∞–∑—á–∏–∫–∞ ‚Äî –≤—Å–µ–≥–æ 1-2 –¥–Ω—è, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –Ω–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –º–æ–¥—É–ª—å–Ω–æ–≥–æ –¥–æ–º–∞.",
      icon: "‚ö°",
      color: "#FF6B35",
    },
    {
      id: 2,
      title: "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å",
      description:
        "–¶–µ–Ω–∞ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –¥–æ–º–∞ –∏–∑–≤–µ—Å—Ç–Ω–∞ –≤—Å–µ–≥–¥–∞ –∑–∞—Ä–∞–Ω–µ–µ –∏ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞. –ù–∏–∫–∞–∫–∏—Ö —Å—é—Ä–ø—Ä–∏–∑–æ–≤ –∏ –ø–µ—Ä–µ–ø–ª–∞—Ç.",
      icon: "üí∞",
      color: "#4ECDC4",
    },
    {
      id: 3,
      title: "–í—Å–µ—Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞",
      description:
        "–î–æ–º –º–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞, –±–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –º–æ–¥—É–ª–µ–π –≤ –∑–∞–≤–æ–¥—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–æ–≥–æ–¥—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.",
      icon: "üå¶Ô∏è",
      color: "#45B7D1",
    },
    {
      id: 4,
      title: "–í—ã—Å–æ–∫–∞—è —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
      description:
        "–ú–Ω–æ–≥–æ—Å–ª–æ–π–Ω—ã–µ —É—Ç–µ–ø–ª–µ–Ω–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —â–µ–ª–µ–π —ç–∫–æ–Ω–æ–º—è—Ç –¥–æ 50% –Ω–∞ –æ—Ç–æ–ø–ª–µ–Ω–∏–∏ –∑–∏–º–æ–π –∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ª–µ—Ç–æ–º. –í—Å–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –æ—Ç–æ–ø–ª–µ–Ω–∏–µ –∑–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω—ã.",
      icon: "üî•",
      color: "#96CEB4",
    },
    {
      id: 5,
      title: "–ó–∞–≤–æ–¥—Å–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ",
      description:
        "–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è –Ω–∞ –≤—ã—Å–æ–∫–æ—Ç–æ—á–Ω–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö, —á—Ç–æ –∏—Å–∫–ª—é—á–∞–µ—Ç –±—Ä–∞–∫ –∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç–æ—Ä.",
      icon: "‚öôÔ∏è",
      color: "#FFEAA7",
    },
    {
      id: 6,
      title: "–ü—Ä–æ—á–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å",
      description:
        "–ö–∞—Ä–∫–∞—Å –∏–∑ —Å—É—Ö–æ–π –¥—Ä–µ–≤–µ—Å–∏–Ω—ã –∏ –¥–≤—É—Ç–∞–≤—Ä–æ–≤—ã—Ö –±–∞–ª–æ–∫ –Ω–µ –¥–∞–µ—Ç —É—Å–∞–¥–∫–∏, –Ω–µ –¥–µ—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∏ —Å–ª—É–∂–∏—Ç –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏—è–º–∏.",
      icon: "üè†",
      color: "#DDA0DD",
    },
  ];

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const itemId = parseInt(entry.target.dataset.itemId);
            setTimeout(() => {
              setVisibleItems((prev) => new Set([...prev, itemId]));
            }, itemId * 150);
          }
        });
      },
      { threshold: 0.1, rootMargin: "0px 0px -100px 0px" }
    );

    itemsRef.current.forEach((item) => {
      if (item) observer.observe(item);
    });

    return () => observer.disconnect();
  }, []);

  return (
    <section className={styles.section} ref={sectionRef}>
      <div className={styles.container}>
        <div className={styles.header}>
          <h2 className={styles.title}>–ü—Ä–∏—á–∏–Ω—ã –≤—ã–±—Ä–∞—Ç—å –º–æ–¥—É–ª—å–Ω—ã–π –¥–æ–º</h2>
          <p className={styles.subtitle}>
            –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –º–æ–¥—É–ª—å–Ω—ã—Ö –¥–æ–º–æ–≤ - —ç—Ç–æ –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ –Ω–æ–≤—ã–π
            —É—Ä–æ–≤–µ–Ω—å –∫–æ–º—Ñ–æ—Ä—Ç–∞, –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ —ç–∫–æ–Ω–æ–º–∏–∏
          </p>
        </div>

        <div className={styles.advantagesGrid}>
          {advantages.map((advantage, index) => (
            <div
              key={advantage.id}
              ref={(el) => (itemsRef.current[index] = el)}
              data-item-id={advantage.id}
              className={`${styles.advantageCard} ${
                visibleItems.has(advantage.id) ? styles.visible : ""
              }`}
              style={{ "--accent-color": advantage.color }}>
              <div className={styles.cardContent}>
                <div className={styles.iconWrapper}>
                  <span className={styles.icon}>{advantage.icon}</span>
                  <div className={styles.iconBg}></div>
                </div>
                <div className={styles.textContent}>
                  <h3 className={styles.cardTitle}>{advantage.title}</h3>
                  <p className={styles.cardDescription}>
                    {advantage.description}
                  </p>
                </div>
              </div>
              <div className={styles.cardGlow}></div>
            </div>
          ))}
        </div>

        <div className={styles.footer}>
          <div className={styles.ctaSection}>
            <h3 className={styles.ctaTitle}>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ?</h3>
            <p className={styles.ctaText}>
              –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –¥–æ–º–∞
            </p>
            <button className={styles.ctaButton}>
              <span>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å</span>
              <div className={styles.buttonGlow}></div>
            </button>
          </div>
        </div>
      </div>
    </section>
  );
};

export default WhyChooseUs;
